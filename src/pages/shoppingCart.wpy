<style lang="less">

.container{
  width: 100%;
  height: 100%;
  font: 30rpx MicrosoftYaHei;
}

.empty_cart {
  width: 100%;
  height: 100%;
  padding: 400rpx 0 0;
  background: #F4F4F4;
}
.empty_cart_img {
  width: 203rpx;
  height: 203rpx;
  display: block;
  margin: 0 auto;
}
.empty_cart_text {
  font-size: 32rpx;
  color: #999;
  margin-top: 20rpx;
  text-align: center;
}
.cartlist_wrap{
  position:relative;
  bottom:100rpx;
  top:15rpx;

}
.list{
  margin: 150rpx 0 0;// 100rpx 0 0;
  padding-bottom:100rpx;

}
.ios_list{
  margin: 100rpx 0 0;
}

.topBar2{
  position: fixed;
  top: 100rpx;
  width: 100%;
  display: flex;
  justify-content: space-between;
  line-height: 100rpx;
  padding: 0 30rpx 0;
  font-weight: bold;
  color: #333;
  background: #FFFFFF;
  z-index: 1000;
  box-sizing: border-box;
  .topBar2_left{
    flex-grow: 1;
  }
}
.ios_topBar2{
  top: 150rpx;
}
  
.cart_goods{
    display: flex;
    align-items: center;
    position: relative;
    margin-bottom: 20rpx;
    padding: 20rpx 0;
    background: #fff;
    .check_wrap{
      width: 40rpx;
    }
    .cart_goods_img {
      width: 210rpx;
      height: 210rpx;
      margin-right: 20rpx;
      background: #ccc;
    }
    .goods_info{
      .goods_title{
        width: 400rpx;
        color: #000;
        .goods_name{
          line-height: 38rpx;
          margin-bottom: 16rpx;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
        }
        .sku{
          font-size: 24rpx;
          color: #999;
          margin-top: -4rpx;
        }
      }
    }
    
    
  }

.buy_num {
  width: 198rpx;
  height: 54rpx;
  line-height: 54rpx;
  position: absolute;
  right: 30rpx;
  bottom: 15rpx;
  display: flex;
  font-size: 34rpx;
  text-align: center;
  .add, .minus{
    width: 54rpx;
    height: 100%;
    border: 1rpx solid #999;
  }
  .add{
    border-bottom-left-radius: 6rpx;
    border-top-left-radius: 6rpx;
  }
  .add.disabled, .minus.disabled {
    background-color: #f5f5f9;
    border-left: 1rpx solid #eee;
    border-bottom: 1rpx solid #eee;
    border-top: 1rpx solid #eee;
    color: #ccc;
  }
  .number {
    width: 89rpx;
    height: 100%;
    color: #333;
    text-align: center;
    border-top: 1rpx solid #999;
    border-bottom: 1rpx solid #999;
  }
}
  

.fullSelect{
  display: flex;
  align-items: center;
  .fullSelect_text{
    font-size: 28rpx;
    color: #68696a;
  }
}
.big_circle{
  width: 40rpx;
  height: 40rpx;
  border: 1rpx solid #666;
  border-radius: 50%;
  // box-sizing: border-box;
}
.icon_check {
  margin: 0 14rpx;
}

.bottomBar{
  position: fixed;
  bottom: 0rpx;
  display: flex;
  align-items: center;
  width: 100%;
  height: 100rpx;
  font-size: 28rpx;
  color: #333;
  background: #fff;
  .sum{
    flex-grow: 1;
    padding: 0 25rpx;
    color: #333;
    text-align: right;
    text{
      color: #e6002d;
    }
  }
  .btn{
    width: 277rpx;
    line-height: 100rpx;
    color: #fff;
    background: linear-gradient(#e6002d, #e8441e);
    text-align: center;
  }
  .del{
    position: absolute;
    right: 100rpx;
  }
    
}
  
</style>

<template>
  <view class="container {{isIos ? 'ios_container' : ''}}">
      <topBar :config.sync='config' @ed.user='edit' @do.user='done'></topBar>
      
      <view class="empty_cart" wx:if="{{cartList.length==0}}">
        <image src="../images/empty.png" class="empty_cart_img"></image>
        <view class="empty_cart_text">购物车是空的~</view>
      </view>
      <view class='cartlist_wrap' wx:else>

          <view class="topBar2 ios_topBar2"> <!-- {{isIos ? 'ios_topBar2' : ''}} -->
              <view class='topBar2_left'></view>
              <view @tap='done' wx:if='{{editable}}'>完成</view>
              <view @tap='edit' wx:else>编辑</view>
          </view>

          <scroll-view class="list {{isIos ? 'ios_list' : ''}}" scroll-y='true' >

              <repeat for='{{cartList}}' index='index' item='item'>

                  <view class="cart_goods">
                      <view class='check_wrap icon_check'>
                        <icon class="" wx:if='{{item.isChecked}}' type="success" color="#ff5f00" @tap='check({{index}})' size="19" />
                        <view class='big_circle' @tap='check({{index}})' wx:else></view>
                      </view>

                      <image src="{{item.product.imgUrl}}" class="cart_goods_img" />

                      <view class="goods_info">
                          <navigator class="goods_title" url="/pages/food/goodsDetail?id={{item.goods_id}}">
                              <view class='goods_name'>{{item.goods_name}}</view>
                              <view class='sku'>数量：{{item.qty}}</view>
                              <view class='goods_originPrice'>¥ {{item.goods_price}}</view>
                          </navigator>
                          <!-- <number :config.sync='NumberConfig' :index.sync='index' :item.sync='item' @change.user='changeNumber'></number> -->
                          <view class="buy_num">
                              <view class="add {{item.num == 1? 'disabled' : ''}}" @tap='minus({{index}})'>-</view> 
                              <view class='number'>{{item.qty}}</view>
                              <view class="minus {{item.num == 100? 'disabled' : ''}}" @tap='add({{index}})'>+</view>
                          </view>
                      </view>
                  </view>

              </repeat>

          </scroll-view>

          <view class='bottomBar' wx:if='{{editable}}'>
              <view class='fullSelect'>
                  <icon class="icon_check" @tap='checkAll' wx:if='{{isCheckedAll}}' type="success" color="#ff5f00" data-index="{{index}}" data-id="{{item.id}}" size="19" />
                  <view class='big_circle icon_check' @tap='checkAll' wx:else></view>
                  <view class='fullSelect_text'>全选</view>
              </view>
              <view class='sum'>您已选择{{count}}件商品</view>
              <view class='btn' @tap='delete'>删除</view>
          </view>
          <view class='bottomBar' wx:else>
              <view class='fullSelect'>
                  <icon class="icon_check" @tap='checkAll' wx:if='{{isCheckedAll}}' type="success" color="#ff5f00" data-index="{{index}}" data-id="{{item.id}}" size="19" />
                  <view class='big_circle icon_check' @tap='checkAll' wx:else></view>
                  <view class='fullSelect_text'>全选</view>
              </view>
              <view class='sum'>合计：<text>¥{{getPrice}}</text></view>
              <view class='btn' @tap='goFirmOrder'>立刻结算({{count}})</view>
          </view>
         
      </view> 

  </view>
</template>

<script>
import wepy from "wepy";
import api from '../utils/api.js';
import topBar from '../components/topBar';
// import number from '../components/number1';


export default class ShoppingCart extends wepy.page {
  config = {
    // navigationBarTitleText: '购物车',
  }

  data = {
    config: {
      tabPage: true,
      name: '购物车',
      edit: { isEdit: false, },
    },
    // numberConfig: {
    //   hasBorder: true,
    //   qty: [ 11 ],
    // },
    editable: false, //
    count: 0, // 总量
    price: 0, // 总价
    isCheckedAll: false, //
    cartList: [], // 商品列表
    cart: {
      goodsFee: null,
      totalFee: null, // 总价
      count: null,    // 总数量
    },
    isIos: null,
    canUpdate: true,
    canSubmit: true, // 是否为第一次结算
  };

  computed = {
    getPrice: () => this.price,
  };

  components = {
    topBar,
    // number,
  };
  
  methods = {
    edit(){
      this.config.edit.isEdit = this.editable = true;
      console.log(`-=-=shoppingcart edit-=-=`);
    },
    done(){
      this.config.edit.isEdit = this.editable = false;
      console.log('-- shoppingCart- done ');
    },
    
    checkAll(){

      if(this.isCheckedAll){
        return this.clear(); 
      }

      this.cartList.forEach((v, i) => this.cartList[i].isChecked = true);
      this.isCheckedAll = !this.isCheckedAll;

      this.compute();
    },
    check(index){

      this.cartList[index].isChecked = !this.cartList[index].isChecked;
      this.isCheckedAll = this.cartList.every(v => v.isChecked);

      this.compute();
    },
    async minus(index){
      let item = this.cartList[index];

      if(!this.canUpdate){
        return wx.showModal({ title: '提示', content: '正在更新...', showCancel: false, });
      }
      this.canUpdate = false;

      if(item.qty <= 1){
        return wx.showModal({ title: '提示', content: '商品数量不能小于1', showCancel: false, });
      }

      let res = await api.updateCart(item.cart_id, {
        quantity: item.qty - 1,
      });

      if(!res){
        return ;
      }

      item.qty--;
      this.canUpdate = true;
      this.$apply();

      this.updateList(res.store_cart_list);

      this.compute();

    },
    async add(index){
      let item = this.cartList[index];
      
      if(!this.canUpdate){
        return wx.showModal({ title: '提示', content: '正在更新...', showCancel: false, });
      }
      this.canUpdate = false;

      let res = await api.updateCart(item.cart_id, {
        quantity: item.qty + 1,
      });

      if(!res){
        return ;
      }
      
      item.qty++;
      this.canUpdate = true;
      this.$apply();

      this.updateList(res.store_cart_list);

      this.compute();

    },
    goFirmOrder(){
      if(!this.canSubmit){
        return ;
      }
      
      if(this.count === 0){
        return wx.showModal({ title: '提示', content: '还没有选中任何商品！', showCancel: false, });
      }

      this.canSubmit = false;
      this.goFirmOrder();

    },
    async delete(){
      let cartList = this.cartList,
          list = [];

      for(let i = cartList.length-1; i >= 0; i--){
        if(cartList[i].isChecked){
          let res = await api.deleteCart(this.cartList[i].cart_id, {
                cart_id: this.cartList[i].cart_id
              });

          if(!res){
            return wx.showToast({ title: '删除失败', icon: 'none', duration: 2000, });
          };

          this.cartList.splice(i, 1);
          this.$apply();

        }

      }

      this.clear();
      this.$apply();
    }
  }

  onShow(){
    this.isIos = /iOS/g.test(wx.getSystemInfoSync().system) ? true : false;
    this.canSubmit = true;
    this.editable = false;

    this.clear();

    this.getCartList();
    
  }

  onPullDownRefresh(){
    
    wx.redirectTo({
      url: '/pages/shoppingCart',
    });

  }


  async goFirmOrder(){

    let goodsList = [],
        carts = this.cartList;

    for(let i = 0, len = carts.length; i < len; i++){
      
      if(carts[i].isChecked){
        goodsList.push({
          // id: carts[i].productId,
          name: carts[i].name,
          // img: carts[i].imgUrl,
          price: carts[i].price,
          // standard: carts[i].sku,
          nubs: carts[i].qty,
        });

      }
      
    }
    //console.log(JSON.stringify(goodsList));
    wx.navigateTo({
      url: '/pages/food/submitOrder?cart='+JSON.stringify(this.cart)+'&goodsList='+encodeURIComponent(JSON.stringify(goodsList)), // {price: this.data.price, count: this.data.count}
    });

  }
  
  async getCartList(){
    wx.showLoading({ title: 'Loading...', });

    const result = await api.getCartList();

    this.updateList(result.store_cart_list); 

    wx.hideLoading();
  }

  updateList(cart){
    let cartList = [];

    for(let key in cart){
      cartList = cartList.concat(cart[key]);
    }

    cartList.forEach((v, i) => { v.isChecked = this.cartList[i] ? this.cartList[i].isChecked : false; v.qty = v.goods_num; } );  
    this.cartList = cartList;
      
    this.$apply();
  }

  async compute(){

    let _this = this,
        count = 0, // 选中个数
        cartList = this.cartList;
    
    this.count = this.price = 0;
    this.cartList.forEach(function(v, i){

      if(v.isChecked){

        _this.count += cartList[i].qty;
        _this.price = _this.add_minus(_this.price, cartList[i].goods_total);
        count++;

      } 

    });
    // 判断是否全选
    this.isCheckedAll = count === cartList.length ? true : false;

    this.$apply();
  }
  
  clear(){

    this.cartList.forEach((v, i) => this.cartList[i].isChecked = false);

    this.isCheckedAll = false;
    this.count = this.price = 0;

  }

  add_minus(nub1, nub2){
	  let len1, len2, m;
	 
    try{len1 = nub1.toString().split('.')[1].length;}catch(e){len1 = 0;}
    try{len2 = nub2.toString().split('.')[1].length;}catch(e){len2 = 0;}
	  m = 10**Math.max(len1, len2);
	 
	  return (nub1*m+nub2*m)/m;
  }


}
</script>

