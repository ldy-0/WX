<style lang="less">

.container{
  width: 100%;
  height: 100%;
  font: 30rpx MicrosoftYaHei;
}

.empty_cart {
  width: 100%;
  height: 100%;
  padding: 400rpx 0 0;
  background: #F4F4F4;
}
.empty_cart_img {
  width: 203rpx;
  height: 203rpx;
  display: block;
  margin: 0 auto;
}
.empty_cart_text {
  font-size: 32rpx;
  color: #999;
  margin-top: 20rpx;
  text-align: center;
}
.cartlist_wrap{
  position:relative;
  bottom:100rpx;
  top:15rpx;

}
.list{
  margin: 150rpx 0 0;// 100rpx 0 0;
  padding-bottom:100rpx;

}
.ios_list{
  margin: 100rpx 0 0;
}

.topBar2{
  position: fixed;
  top: 100rpx;
  width: 100%;
  display: flex;
  justify-content: space-between;
  line-height: 100rpx;
  padding: 0 30rpx 0;
  font-weight: bold;
  color: #333;
  background: #FFFFFF;
  z-index: 1000;
  box-sizing: border-box;
  .topBar2_left{
    flex-grow: 1;
  }
}
.ios_topBar2{
  top: 150rpx;
}
  
.cart_goods{
    display: flex;
    align-items: center;
    position: relative;
    margin-bottom: 20rpx;
    padding: 20rpx 0;
    background: #fff;
    .check_wrap{
      width: 40rpx;
    }
    .cart_goods_img {
      width: 210rpx;
      height: 210rpx;
      margin-right: 20rpx;
      background: #ccc;
    }
    .goods_info{
      .goods_title{
        width: 400rpx;
        color: #000;
        .goods_name{
          line-height: 38rpx;
          margin-bottom: 16rpx;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
        }
        .sku{
          font-size: 24rpx;
          color: #999;
          margin-top: -4rpx;
        }
      }
    }
    
    
  }

.buy_num {
  width: 198rpx;
  height: 54rpx;
  line-height: 54rpx;
  position: absolute;
  right: 30rpx;
  bottom: 15rpx;
  display: flex;
  font-size: 34rpx;
  text-align: center;
  .add, .minus{
    width: 54rpx;
    height: 100%;
    border: 1rpx solid #999;
  }
  .add{
    border-bottom-left-radius: 6rpx;
    border-top-left-radius: 6rpx;
  }
  .add.disabled, .minus.disabled {
    background-color: #f5f5f9;
    border-left: 1rpx solid #eee;
    border-bottom: 1rpx solid #eee;
    border-top: 1rpx solid #eee;
    color: #ccc;
  }
  .number {
    width: 89rpx;
    height: 100%;
    color: #333;
    text-align: center;
    border-top: 1rpx solid #999;
    border-bottom: 1rpx solid #999;
  }
}
  

.fullSelect{
  display: flex;
  align-items: center;
  .fullSelect_text{
    font-size: 28rpx;
    color: #68696a;
  }
}
.big_circle{
  width: 40rpx;
  height: 40rpx;
  border: 1rpx solid #666;
  border-radius: 50%;
  // box-sizing: border-box;
}
.icon_check {
  margin: 0 14rpx;
}

.bottomBar{
  position: fixed;
  bottom: 0rpx;
  display: flex;
  align-items: center;
  width: 100%;
  height: 100rpx;
  font-size: 28rpx;
  color: #333;
  background: #fff;
  .sum{
    flex-grow: 1;
    padding: 0 25rpx;
    color: #333;
    text-align: right;
    text{
      color: #e6002d;
    }
  }
  .btn{
    width: 277rpx;
    line-height: 100rpx;
    color: #fff;
    background: linear-gradient(#e6002d, #e8441e);
    text-align: center;
  }
  .del{
    position: absolute;
    right: 100rpx;
  }
    
}
  
</style>

<template>
  <view class="container {{isIos ? 'ios_container' : ''}}">
      <topBar :config.sync='config' @ed.user='edit' @do.user='done'></topBar>
      
      <view class="empty_cart" wx:if="{{cartList.length==0}}">
        <image src="../images/empty.png" class="empty_cart_img"></image>
        <view class="empty_cart_text">购物车是空的~</view>
      </view>
      <view class='cartlist_wrap' wx:else>
          <view class="topBar2 ios_topBar2"> <!-- {{isIos ? 'ios_topBar2' : ''}} -->
              <view class='topBar2_left'></view>
              <view @tap='done' wx:if='{{isEdit}}'>完成</view>
              <view @tap='edit' wx:else>编辑</view>
          </view>
          <scroll-view class="list {{isIos ? 'ios_list' : ''}}" scroll-y='true' >

              <repeat for='{{cartList}}' index='index' item='item'>

                  <view class="cart_goods">
                      <view class='check_wrap icon_check'>
                        <icon class="" wx:if='{{checkedList[index]}}' type="success" color="#ff5f00" @tap='check({{index}})' data-index="{{index}}" data-id="{{item.id}}" size="19" />
                        <view class='big_circle' @tap='check({{index}})' wx:else></view>
                      </view>

                      <image src="{{item.product.imgUrl}}" class="cart_goods_img" />

                      <view class="goods_info">
                          <navigator class="goods_title" url="/pages/goods_detail?id={{item.productId}}">
                              <view class='goods_name'>{{item.title}}</view>
                              <view class='sku'>数量：{{item.qty}}</view>
                              <view class='goods_originPrice'>¥ {{item.price}}</view>
                          </navigator>
                          <view class="buy_num">
                              <view class="add {{item.num == 1? 'disabled' : ''}}" @tap='minus({{index}})'>-</view> 
                              <view class='number'>{{item.qty}}</view>
                              <view class="minus {{item.num == 100? 'disabled' : ''}}" @tap='add({{index}})'>+</view>
                          </view>
                      </view>
                  </view>

              </repeat>

          </scroll-view>

          <view class='bottomBar' wx:if='{{isEdit}}'>
              <view class='fullSelect'>
                  <icon class="icon_check" @tap='checkAll' wx:if='{{isCheckedAll}}' type="success" color="#ff5f00" data-index="{{index}}" data-id="{{item.id}}" size="19" />
                  <view class='big_circle icon_check' @tap='checkAll' wx:else></view>
                  <view class='fullSelect_text'>全选</view>
              </view>
              <view class='sum'>您已选择{{count}}件商品</view>
              <view class='btn' @tap='delete'>删除</view>
          </view>
          <view class='bottomBar' wx:else>
              <view class='fullSelect'>
                  <icon class="icon_check" @tap='checkAll' wx:if='{{isCheckedAll}}' type="success" color="#ff5f00" data-index="{{index}}" data-id="{{item.id}}" size="19" />
                  <view class='big_circle icon_check' @tap='checkAll' wx:else></view>
                  <view class='fullSelect_text'>全选</view>
              </view>
              <view class='sum'>合计：<text>¥{{getPrice}}</text></view>
              <view class='btn' @tap='goFirmOrder'>立刻结算({{count}})</view>
          </view>
         
      </view> 

  </view>
</template>

<script>
import wepy from "wepy";
import cartApi from '../api/cartApi.js';
import topBar from '../components/topBar';
// import number from '../components/number1';


export default class ShoppingCart extends wepy.page {
  config = {
    navigationBarTitleText: '购物车',
  }

  data = {
    config: {
      tabPage: true,
      name: '购物车',
      edit: { isEdit: false, },
      //share: { name: '商品详情', path: '/pages/comfire_order', },
    },
    // numberConfig: {
    //   hasBorder: true,
    //   qty: [ 11 ],
    // },
    editable: false, //
    count: 0, // 总量
    price: 0, // 总价
    isCheckedAll: false, //
    checkedList: [],
    cartList: [], // 商品列表
    cart: {
      goodsFee: null,
      totalFee: null, // 总价
      count: null,    // 总数量
    },
    isIos: null,
    isFirst: true, // 是否为第一次结算
  };

  computed = {
    isEdit(){ return this.editable; },
    getCount: () => this.count,
    getPrice: () => this.price,
  };

  components = {
    topBar,
    // number,
  };
  
  methods = {
    edit(){
      this.config.edit.isEdit = this.editable = true;
      console.log(`-=-=shoppingcart edit-=-=`);
    },
    done(){
      this.config.edit.isEdit = this.editable = false;
      console.log('-- shoppingCart- done ');
    },
    change(e){
      console.log(e);
    },
    checkAll(){
      if(this.isCheckedAll){
        this.checkedList.forEach((v, i) => this.checkedList[i] = false);
        this.isCheckedAll = false;
        this.count = 0;
        return this.price = 0;
      }

      this.checkedList.forEach((v, i) => this.checkedList[i] = true);
      this.isCheckedAll = true;

      this.compute();
      // this.cartPricing();
    },
    check(index){
      this.checkedList[index] = this.checkedList[index] ? false : true;
      this.isCheckedAll = this.checkedList.every(v => v);

      this.compute();
      // this.cartPricing();
    },
    async minus(index){
      let item = this.cartList[index],
          qty = item.qty;

      console.log(qty);
      if(qty <= 1){
        return wx.showModal({ title: '提示', content: '商品数量不能小于1', showCancel: false, });
      }

      let res = await 0;
      
      if(res){
        return ;
      }

      item.qty--;
      this.compute();

    },
    async add(index){
      let item = this.cartList[index];

      let res = await 0;

      if(res){
        return ;
      }

      item.qty++;
      this.compute();

    },
    goFirmOrder(){
      if(!this.isFirst){
        return ;
      }

      this.isFirst = false;
      this.goFirmOrder();

    },
    async delete(){
      let checkedList = this.data.checkedList,
          cartList = this.data.cartList,
          list = [];

      for(let i = checkedList.length-1; i >= 0; i--){
        if(checkedList[i]){
          let res = await cartApi.deleteCartItem({
                params: { id: this.data.cartList[i].id }
              });

          if(!res){
            return wx.showToast({ title: '删除失败', icon: 'none', duration: 2000, });
          };

          this.data.checkedList.splice(i, 1);
          this.data.cartList.splice(i, 1);
          this.data.isCheckedAll = false;
          this.$apply();

        }

      }

      this.data.price = 0;
      this.data.count = 0;
      this.$apply();
    }
  }

  onShow(){
    this.isIos = /iOS/g.test(wx.getSystemInfoSync().system) ? true : false;
    this.isCheckedAll = false;
    this.editable = false;
    this.price = 0;
    this.count = 0;
    this.isFirst = true;
    // this.getCartList();
    this.cartList = [
      { title: 'askjdfk受到父母双方都没士大夫什么地方开幕式的父母反对是aa', price: 123, qty: 1, },
      { title: 'bbb', price: 123, qty: 2, },
    ];
    this.checkedList = [ false, false ];
     
  }

  onPullDownRefresh(){
    
    wx.redirectTo({
      url: '/pages/shoppingCart',
    });

  }

  edit(){
      console.log('pages --------- edit');
      this.editable = true;
  }

  async goFirmOrder(){

    if(this.data.count === 0){
      return wx.showToast({ title: '还没有选中任何商品！', icon: 'none', duration: 2000, });
    }

    let goodsList = [],
        checkeds = this.data.checkedList,
        carts = this.data.cartList;

    for(let i = 0, len = checkeds.length; i < len; i++){
      
      if(checkeds[i]){
        goodsList.push({
          id: carts[i].productId,
          name: carts[i].title,
          img: carts[i].product.imgUrl,
          price: carts[i].sku.price,
          standard: carts[i].sku,
          nubs: carts[i].amount,
        });

      }
      
    }
    //console.log(JSON.stringify(goodsList));
    wx.navigateTo({
      url: '/pages/comfire_order?cart='+JSON.stringify(this.cart)+'&goodsList='+encodeURIComponent(JSON.stringify(goodsList)), // {price: this.data.price, count: this.data.count}
    });

  }
  
  async getCartList(){
    wx.showLoading({ title: 'Loading...', });

    while(this.data.cartList[0]){
      this.data.cartList.pop();
      this.data.checkedList.pop();
    }

    const result = await cartApi.getCartInfo({});

    if(!result){
      return wx.showModal({ title: '提示', content: '获取购物车信息失败!', });
    }
    
    for(let i = 0, len = result.cartItems.length; i < len; i++){
      let item = result.cartItems[i];

      this.data.cartList[i] = item;
      this.data.checkedList[i] = false;
    }
    this.$apply();

    wx.hideLoading();
  }

  async updateCartInfo(index, amount){
    let result = await cartApi.updateCartInfo({
          params: {
            id: this.data.cartList[index].skuId,
            amount,
          }
        });
    
    if(!result){
      return 'no';
    }
    
    this.cartList[index].amount = amount;
    this.cartPricing();
      
  }

  async compute(){

    let _this = this,
        skuMaps = {},
        chooseList = [],
        count = 0,
        checkedList = this.checkedList,
        cartList = this.cartList;
    
    this.count = 0;
    checkedList.forEach(function(v, i){

      if(v){
        _this.count += cartList[i].qty;
        count++;
      } 

    });
    // for(let i = 0, len = checkedList.length; i < len; i++){
    
    //   if(checkedList[i]){
    //     chooseList.push(cartList[i].sku.id); // chooseList.push(cartList[i].skuId);
    //     this.data.count += cartList[i].amount;
    //     count++;
    //   }  
      
    // }
    // 判断是否全选
    this.isCheckedAll = count === checkedList.length ? true : false;

    // for(let i = 0, len = chooseList.length; i < len; i++){
    //   skuMaps["skuIds[" + i + "]"] = chooseList[i];
    // }

    // let result = await cartApi.cartPricing({
    //   params: skuMaps
    // });

    // if(!result){
    //   this.data.price = 0;
    //   return this.$apply();
    // }

    // this.data.price =  result.totalPricingResult.totalFee;

    // this.cart.totalFee = result.totalPricingResult.totalFee;
    // this.cart.goodsFee = result.totalPricingResult.goodsFee;
    // this.cart.logisticsFee = result.totalPricingResult.logisticsFee;
    // this.cart.count = this.count;
    this.$apply();
  }

  add_minus(nub1, nub2){
	  let len1, len2, m;
	 
    try{len1 = nub1.toString().split('.')[1].length;}catch(e){len1 = 0;}
    try{len2 = nub2.toString().split('.')[1].length;}catch(e){len2 = 0;}
	  m = 10**Math.max(len1, len2);
	 
	  return (nub1*m+nub2*m)/m;
  }


}
</script>

