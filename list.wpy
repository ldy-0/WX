<style lang="css">

.container{
  font: 32rpx PingFang-SC-Medium
  background: #F4F4F4
}
  


.hot{
  margin: 14rpx 0 0
  background: #fff
}
.hot_title{
  display: flex
  align-items: center
  line-height: 83rpx
  margin-left: 28rpx
  color: #202020
}
.hot_icon{
  width: 10rpx
  height: 10rpx
  margin-right: 18rpx
  background: #FFEE55
}
      
.row{
  display: flex
}
.item{
  width: 345rpx
  height: 594rpx
  margin-left: 20rpx
  border-radius: 10rpx
  font-size: 28rpx
  color: #666
}
      
image{
  width: 100%;
  height: 350rpx;
  border-radius: 10rpx 10rpx 0 0
}
        
.info{
  padding: 18rpx 24rpx 0
}
       
          
</style>

<template>
 
    <repeat for="{{hotList}}" item="items">
        <view class="row">
            <repeat for="{{items}}" item='item'>
                
                <view class='item' @tap='goGoodsDetail({{item}})'>
                    <image src='../images/商城/img_shangpin@2x.png' />
                    <view class='info'>
                        <view class='desc'>{{item.name}}</view>
                        <view class='row'>
                            <view class='price'>¥{{item.price}}</view>
                        </view>
                        <view class='number'>销量 {{item.amount}}</view>
                    </view>
                </view>
                
            </repeat>
        </view>
    </repeat>
    
</template>

<script>
import wepy from "wepy";
import userApi from "../utils/api/userApi";
import cartApi from '../utils/api/cartApi';
import {shttp} from "../utils/http";

export default class Home extends wepy.page {
  data = {
    hotList: [ [ 
                  { name: '万木沉香380年古树...', price: '¥625.00', img: '', amount: 3445 },
                  { name: '万木沉香380年古树...', price: '¥625.00', img: '', amount: 3445 },
               ] ],
  };
  
  computed = {
    isFirst: () => this.$parent.globalData.isFirst,
  };

  methods = {
    
    goAdvert(item){

      if (item.targetType == "PRODUCT") {
        if (item.target.length == 0) {
          return;
        }
        wepy.navigateTo({
          url: "/pages/home/goodsDetail?product=" + item.target
        });
      }else if(item.targetType=="CUSTOMIZED"){
        console.log(item);
        //  wepy.navigateTo({
        //   url: "/pages/web_view?url=" + encodeURIComponent(item.targetUrl)
        // });
      }

    },
    async bindGetUserInfo(e){
      console.log(e.detail.userInfo);

      if (e.detail.userInfo){
        //用户按了允许授权按钮
        this.$parent.globalData.isFirst = false;

        let loginres = await wepy.login(); 
        this.$parent.globalData.userInfo.code = loginres.code;
        this.$parent.globalData.userInfo.encryptedData = e.detail.encryptedData;
        this.$parent.globalData.userInfo.iv = e.detail.iv;
        this.$parent.globalData.userInfo.name = e.detail.userInfo.nickName;
        this.$parent.globalData.userInfo.head = e.detail.userInfo.avatarUrl;
        
        wx.reLaunch({
          url: '/pages/home',
        });

        console.log('允许');
      } else {
        // 用户按了拒绝按钮
        console.log('拒绝');
      }
    },
    goGoodsDetail(item){
      
       wx.navigateTo({
        url: '/pages/home/goodsDetail?product='+item.productId,
      });

    },
    
  };

  components = {
  };
  
  async onShow(){

    if(!this.$parent.globalData.userInfo.name){
      return ;
    }
    
    //this.getCartList();
  }

  async onLoad(options){

  }

  async getAdList() {
    
    const res = await shttp.get('/v2/openapi/home/carousels').end(),
          imgs = res.data.images;
    
    for(let i = 0, len = imgs.length; i < len; i++){
      this.data.adList.push(imgs[i]);
    }
    this.$apply();
  }

  async getHotCatalog(){
    
    // const res = await shttp.get('/v1/public/hot-catalog').end();
    // console.log(`hot: ---${typeof res}`);
  }

  async getHotList(){
    let that = this;
    //const json = await userApi.getHomeDisvocerList({});
    
    let res = await shttp.get('/v2/openapi/home/getProductTop').end(),
        list = this.data.hotList,
        flag = 0,
        len = list.length - 1;

    res.data.forEach(function(v, i){
      if(flag >= 2){
        flag = 0;
        list.push([]);
      }

      let product = list[len][flag] = {};

      for(let key in v){
        if(key === 'productName'){
          product.name = v[key];
        }else if(key === 'productPrice'){
          product.price = v[key];
        }else if(key === 'productImg'){
          product.img = v[key];
        }else if(key === 'productAmount'){
          product.amount = v[key] ? v[key] : 0;
        }else if(key === 'shopId'){
          product.shopId = v[key];
        }else if(key === 'productId'){
          product.productId = v[key];
        }
      }

      flag++;
    });
    //console.log(list);
  }
  
  async getCartList(){
    if(!this.data.hotList[0][0]){
      return ;
    }
    const result = await cartApi.getCartInfo({});
    
    for(let i = 0, len = result.cartItems.length; i < len; i++){
      
      this.data.hotList.forEach((v, ind)=>{
        if(v[0] && result.cartItems[i].productId === v[0].productId){
        console.log('-=-'+this.data.hostList);
          //this.data.hostList[ind][0].isInCart = true;
        };
        
        if(v[1] && result.cartItems[i].productId === v.productId){
          this.data.hostList[ind][1].isInCart = true;
        };
        
      });
      
    }
    this.$apply();
  }
  
  
  onShareAppMessage() {
    return {
      title: "",
      path: ``,
      success: function(res) {
        console.log(res);
      },
      fail: function(res) {
        console.log("fail");
      }
    };
  }
}
</script>
